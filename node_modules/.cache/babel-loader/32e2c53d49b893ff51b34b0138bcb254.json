{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar isCallable = require('../internals/is-callable');\n\nvar isRegExp = require('../internals/is-regexp');\n\nvar toString = require('../internals/to-string');\n\nvar getMethod = require('../internals/get-method');\n\nvar getRegExpFlags = require('../internals/regexp-flags');\n\nvar getSubstitution = require('../internals/get-substitution');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return string.indexOf(searchValue, fromIndex);\n}; // `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n\n\n$({\n  target: 'String',\n  proto: true\n}, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype ? searchValue.flags : getRegExpFlags.call(searchValue)));\n        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n\n      replacer = getMethod(searchValue, REPLACE);\n\n      if (replacer) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return toString(O).replace(searchValue, replaceValue);\n      }\n    }\n\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n\n    while (position !== -1) {\n      if (functionalReplace) {\n        replacement = toString(replaceValue(searchString, position, string));\n      } else {\n        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      }\n\n      result += string.slice(endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n\n    if (endOfLastMatch < string.length) {\n      result += string.slice(endOfLastMatch);\n    }\n\n    return result;\n  }\n});","map":{"version":3,"sources":["/home/vtttuong/Documents/freelancer/coreui-free-react-admin-template/node_modules/core-js/modules/es.string.replace-all.js"],"names":["$","require","requireObjectCoercible","isCallable","isRegExp","toString","getMethod","getRegExpFlags","getSubstitution","wellKnownSymbol","IS_PURE","REPLACE","RegExpPrototype","RegExp","prototype","max","Math","stringIndexOf","string","searchValue","fromIndex","length","indexOf","target","proto","replaceAll","replaceValue","O","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","replacement","position","endOfLastMatch","result","call","TypeError","replace","undefined","slice"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return string.indexOf(searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? searchValue.flags\n          : getRegExpFlags.call(searchValue)\n        ));\n        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return toString(O).replace(searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      if (functionalReplace) {\n        replacement = toString(replaceValue(searchString, position, string));\n      } else {\n        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      }\n      result += string.slice(endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += string.slice(endOfLastMatch);\n    }\n    return result;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}